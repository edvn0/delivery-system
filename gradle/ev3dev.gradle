project.ext.ev3devGroup = "ELJ-System"

//////////////////////////////////////
// Create service manipulation tasks
// normal arguments:
//  - serviceName: systemd name of the manipulated service.
//  - action: systemd action acting on the service
def createServiceTask(serviceName, action) {
    def taskName = action + serviceName.capitalize()
    def taskDesc = "${action.capitalize()} the $serviceName service."

    project.createSudoCommandTask(project.ev3devGroup, taskName, "systemctl $action $serviceName", taskDesc)
}

////////////////////////////////////////
// Create service manipulation tasks
// normal arguments:
//  - serviceName: systemd name of the manipulated service.
def createServiceTasks(serviceName) {
    createServiceTask(serviceName, "stop")
    createServiceTask(serviceName, "restart")
}

createServiceTasks("bluetooth")
createServiceTasks("ntp")
createServiceTasks("nmbd")
createServiceTasks("brickman")
createCommandTask(project.ev3devGroup, "getDebianDistro", "cat /etc/os-release", "Get the /etc/os-release file from the brick")
createCommandTask(project.ev3devGroup, "free", "free", "Print free memory summary.")
createCommandTask(project.ev3devGroup, "ps", "ps aux | sort -n -k 4", "Print list of running processes.")
createSudoCommandTask(project.ev3devGroup, "shutdown", "shutdown -h now", "Shutdown the brick.")
createCommandTask(project.ev3devGroup, "ev3devInfo", "ev3dev-sysinfo -m", "Get output of ev3dev-sysinfo -m.")
